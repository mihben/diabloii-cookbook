@using DiabloII_Cookbook.Api.DataTransferObjects;
@using DiabloII_Cookbook.Client.Extensions

<div class="panel">
    <p class="name">@RuneWord.Name</p>
    <p class="item-types">
        (
            @foreach (var itemType in RuneWord.ItemTypes)
            {
                <span class="@itemType.FilteredBy(Filtered)">@itemType.Name</span>
                @if (!itemType.Id.Equals(RuneWord.ItemTypes.Last().Id))
                {
                    @Separator;
                }
            }                
        )
    </p>

    <div class="ingredients">
        @foreach (var ingredient in @RuneWord?.Ingredients)
        {
            <RuneComponent Rune="ingredient.Rune" Level="Level ?? 99"/>
        }
    </div>

    <p class="properties">
        @foreach (var property in RuneWord.Properties)
        {
            <p class="property">@property.GetDescription(Level ?? 0)</p>
        }        
    </p>

    <p class="level @RuneWord.IsApplicable(Level ?? 99)">Required level: @RuneWord.Level</p>
</div>

@code {
    [Parameter]
    public RuneWord RuneWord { get; set; }

    [Parameter]
    public int? Level { get; set; }

    [Parameter]
    public IEnumerable<ItemType> Filtered { get; set; }

    private string Separator => ", ";
}
